name: ci
on:
    pull_request:
        branches: 
          - develop
          - master
    push:
        branches:
          - develop
          - master
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: repository checkout
              uses: actions/checkout@v3

            - name: python3.10 setup 
              uses: actions/setup-python@v4
              with:
                python-version: '3.10'
                check-latest: true

            - name: install dependencies
              run: |
                pip install fastapi["all"]
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            - name: cache dependencies
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: code formating
              run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: run testcases
              run: pytest

            - name: test coverage report
              run: pytest --cov=./app ./tests

            - name: upload test coverage
              uses: actions/upload-artifact@v1
              with:
                name: code-coverage
                path: ./.coverage

            - name: build fastapi docker image
              if: github.event_name == 'push'
              run: docker build -t '${{ secrets.DOCKER_USERNAME }}'/demo-fastapi:'${{ github.sha }}' .

            - name: login to dockerhub
              if: github.event_name == 'push'
              run: docker login --username '${{ secrets.DOCKER_USERNAME }}' --password '${{ secrets.DOCKER_PASSWORD }}'

            - name: push image to dockerhub
              if: github.event_name == 'push'
              run: docker push '${{ secrets.DOCKER_USERNAME }}'/demo-fastapi:'${{ github.sha }}'