name: ci
on:
    pull_request:
        branches: 
          - develop
          - master
    push:
        branches:
          - develop
          - master
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: repository checkout
              uses: actions/checkout@v3

            - name: python3.10 setup 
              uses: actions/setup-python@v4
              with:
                python-version: '3.10'
                check-latest: true

            - name: install dependencies
              run: |
                pip install fastapi["all"]
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            - name: cache dependencies
              uses: actions/cache@v3
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: code formating
              run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: run testcases
              run: pytest

            - name: test coverage report
              run: pytest --cov=./app ./tests

            - name: upload test coverage
              uses: actions/upload-artifact@v1
              with:
                name: code-coverage
                path: ./.coverage

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: 14

            - name: Install dependencies
              run: npm install

            - name: Run semantic-release
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
              run: npx semantic-release

            - name: Build and Push Docker image
              uses: docker/build-push-action@v2
              with:
                context: .
                file: Dockerfile
                push: true
                tags: ${{ steps.release.outputs.version }}